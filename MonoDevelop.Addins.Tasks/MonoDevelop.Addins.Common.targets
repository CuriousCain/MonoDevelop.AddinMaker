<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="MonoDevelop.Addins.Tasks.ResolveMonoDevelopAddins" AssemblyFile="MonoDevelop.Addins.Tasks.dll" />
  <UsingTask TaskName="MonoDevelop.Addins.Tasks.GetDefaultMonoDevelopLocations" AssemblyFile="MonoDevelop.Addins.Tasks.dll" />
  <!--
  TODO:
  * the Addin Maker addin should set MDInstallRoot so it can target custom MD version
  * properly install addin via pack/install
  * targets for packing, etc
  -->
  <PropertyGroup>
    <MDProfileVersion Condition="'$(MDProfileVersion)' == ''">5.0</MDProfileVersion>
    <MDProfilePath Condition="'$(MDProfilePath)' == ''">$(MONODEVELOP_TEST_PROFILE)</MDProfilePath>
  </PropertyGroup>

  <!-- always reference the core addins and assemblies -->
  <ItemGroup>
    <MDAddinReference Include="MonoDevelop.Core"/>
    <MDAddinReference Include="MonoDevelop.Ide" />
    <Reference Include="Mono.Addins">
        <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Debugging">
        <Private>False</Private>
    </Reference>
    <Reference Include="Mono.TextEditor">
        <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cairo">
        <Private>False</Private>
    </Reference>
    <Reference Include="ICSharpCode.NRefactory">
        <Private>False</Private>
    </Reference>
    <Reference Include="gtk-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="atk-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="glib-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="gdk-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="pango-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="xwt">
        <Private>False</Private>
    </Reference>
  </ItemGroup>

  <PropertyGroup>
    <!-- FIXME logically this should be ResolveReferencesDependsOn but XS currently uses ResolveAssemblyReferences -->
    <ResolveAssemblyReferencesDependsOn>
      _MDResolveAddinReferences;
      $(ResolveAssemblyReferencesDependsOn)
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>

  <Target Name="_MDResolveLocations">
    <GetDefaultMonoDevelopLocations ProfileVersion="$(MDProfileVersion)" ProfilePath="$(MDProfilePath)">
      <Output TaskParameter="ConfigDir"   PropertyName="MDConfigDir"   Condition="'$(MDConfigDir)' == ''"    />
      <Output TaskParameter="AddinsDir"   PropertyName="MDAddinsDir"   Condition="'$(MDAddinsDir)' == ''"    />
      <Output TaskParameter="DatabaseDir" PropertyName="MDDatabaseDir" Condition="'$(MDDatabaseDir)' == ''"  />
      <Output TaskParameter="InstallRoot" PropertyName="MDInstallRoot" Condition="'$(MDInstallRoot)' == ''"  />
    </GetDefaultMonoDevelopLocations>

    <Message Text = "MDConfigDir:   $(MDConfigDir)" />
    <Message Text = "MDAddinsDir:   $(MDAddinsDir)" />
    <Message Text = "MDDatabaseDir: $(MDDatabaseDir)" />
    <Message Text = "MDInstallRoot: $(MDInstallRoot)" />

    <Error Text = "Install root not found: $(MDInstallRoot)" Condition="!Exists('$(MDInstallRoot)\bin\mdtool.exe')" />
    <Error Text = "Addin cache not found: $(MDDatabaseDir)" Condition="!Exists('$(MDDatabaseDir)\addin-db-001\addin-data')" />

    <PropertyGroup>
      <AssemblySearchPaths>$(MDInstallRoot)\bin;$(AssemblySearchPaths)</AssemblySearchPaths>
    </PropertyGroup>
  </Target>

  <Target Name="_MDResolveAddinReferences" DependsOnTargets="_MDResolveLocations">
    <ResolveMonoDevelopAddins
      ConfigDir="$(MDConfigDir)"
      AddinsDir="$(MDAddinsDir)"
      DatabaseDir="$(MDDatabaseDir)"
      InstallRoot="$(MDInstallRoot)"
      AddinReferences="@(MDAddinReference)"
    >
      <Output TaskParameter="AssemblyReferences" ItemName ="Reference" />
    </ResolveMonoDevelopAddins>
  </Target>

  <Target Name="InstallAddin" DependsOnTargets="Build">
    <ItemGroup>
        <_MDAddinFiles Include="$(OutDir)\**\*"/>
    </ItemGroup>
    <Copy
      SourceFiles="@(_MDAddinFiles)"
      DestinationFiles="@(_MDAddinFiles->'$(MDAddinsDir)\$(AssemblyName)\%(RecursiveDir)%(Filename)%(Extension)')"
      SkipUnchangedFiles="True" />
  </Target>
</Project>